name: Branch based docker build and publish

on:
  push:
    branches:
      - "*"
    # branches-ignore:
    #  - 'main'
    tags:
      - v*
#  pull_request:

env:
  DIVE_VERSION: v0.10
  ZPHINX_COMMIT: 2362a37
  EQUIHASH_COMMIT: 325de23
  ALPINE_VERSION: 3.21.2

jobs:
  build:
    permissions:
      contents: read
      packages: write
      id-token: write


    name: Build and publish the conatiner image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4

      - name: Setup buildx
        uses: docker/setup-buildx-action@v3.8.0
        with:
          install: true
      
      - name: Setup cosign
        uses: sigstore/cosign-installer@v3.7.0

      - name: Install Syft
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
  
      - name: Get current repository name
        run: echo "REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")" >> $GITHUB_ENV
        shell: bash

      - name: Determine tag name
        run: |
          #IMAGE_ID_GITHUB=docker.pkg.github.com/${{ github.repository }}/$REPOSITORY_NAME
          #IMAGE_ID_GITHUB=$(echo $IMAGE_ID_GITHUB | tr '[A-Z]' '[a-z]')
          #echo "IMAGE_ID_GITHUB=$IMAGE_ID_GITHUB" >> $GITHUB_ENV

          IMAGE_ID_DOCKERHUB=${{ secrets.DOCKER_REPO }}/${{ secrets.DOCKER_LOGIN_NAME }}/$REPOSITORY_NAME
          IMAGE_ID_DOCKERHUB=$(echo $IMAGE_ID_DOCKERHUB | tr '[A-Z]' '[a-z]')
          echo "IMAGE_ID_DOCKERHUB=$IMAGE_ID_DOCKERHUB" >> $GITHUB_ENV

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "BRANCH=$(echo ${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}})" >> $GITHUB_ENV

      - name: Docker tag meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}
          tags: |
            type=sha
            # type=ref,event=branch
      - name: Login to External Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REPO }}
          username: ${{ secrets.DOCKER_LOGIN_NAME }}
          password: ${{ secrets.DOCKER_API_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v6.12.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          provenance: mode=max
          sbom: true
          build-args: |
            ZPHINX_COMMIT=${{ env.ZPHINX_COMMIT }}
            EQUIHASH_COMMIT=${{ env.EQUIHASH_COMMIT }}
            ALPINE_VERSION=${{ env.ALPINE_VERSION }}
          
      - name: Sign container image
        run: |
          cosign sign ${TAGS}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          COSIGN_EXPERIMENTAL: "true"
      
      - name: Generate SBOM, sign and push
        run: |
          syft attest --output syft-json --key cosign.key ${TAGS} > sbom_attestation.json
          cosign attach attestation --attestation sbom_attestation.json ${TAGS}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          COSIGN_EXPERIMENTAL: "true"
      
      - name: Archive sbom results
        uses: actions/upload-artifact@v3
        with:
          name: SBOM-ATTESTATION
          path: sbom_attestation.json

  scanners:
    name: Scanners
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.7.0

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: SBOM-ATTESTATION

      - name: Scan SBOM attestation file
        run: |
          grype sbom_attestation.json --key cosign.pub --only-fixed -o table -f medium --file grype_report.txt
        #continue-on-error: true

      - name: Print Grype report
        run: cat grype_report.txt

      - name: Archive grype results
        uses: actions/upload-artifact@v3
        with:
          name: GRYPE_REPORT
          path: grype_report.txt


    
