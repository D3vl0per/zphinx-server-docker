#############################
### LLVM build from source ##
#############################

## From https://github.com/ziglang/docker-zig

FROM alpine:3.13.3 as essetials-builder

ARG LLVM_VERSION
ARG LLD_VERSION
ARG CLANG_VERSION

RUN apk update \
	&& apk add gcc g++ automake autoconf pkgconfig python2-dev cmake ninja libc-dev binutils zlib-static libstdc++

RUN mkdir -p /deps

# llvm
WORKDIR /deps
RUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-$LLVM_VERSION/llvm-$LLVM_VERSION.src.tar.xz
RUN tar xf llvm-$LLVM_VERSION.src.tar.xz
RUN mkdir -p /deps/llvm-$LLVM_VERSION.src/build
WORKDIR /deps/llvm-$LLVM_VERSION.src/build
RUN cmake .. -DCMAKE_INSTALL_PREFIX=/deps/local -DCMAKE_PREFIX_PATH=/deps/local -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_LIBXML2=OFF -DLLVM_ENABLE_TERMINFO=OFF -G Ninja
RUN ninja install

# lld
WORKDIR /deps
RUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-$LLD_VERSION/lld-$LLD_VERSION.src.tar.xz
RUN tar xf lld-$LLD_VERSION.src.tar.xz
RUN mkdir -p /deps/lld-$LLD_VERSION.src/build
WORKDIR /deps/lld-$LLD_VERSION.src/build
RUN cmake .. -DCMAKE_INSTALL_PREFIX=/deps/local -DCMAKE_PREFIX_PATH=/deps/local -DCMAKE_BUILD_TYPE=Release -G Ninja
RUN ninja install

# clang
WORKDIR /deps
RUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-$CLANG_VERSION/clang-$CLANG_VERSION.src.tar.xz
RUN tar xf clang-$CLANG_VERSION.src.tar.xz
RUN mkdir -p /deps/clang-$CLANG_VERSION.src/build
WORKDIR /deps/clang-11.0.0.src/build
RUN cmake .. -DCMAKE_INSTALL_PREFIX=/deps/local -DCMAKE_PREFIX_PATH=/deps/local -DCMAKE_BUILD_TYPE=Release -G Ninja
RUN ninja install


###############################
## Ziglang build from source ##
###############################

FROM alpine:3.13.3 as zig-builder

ARG ZIG_COMMIT
ARG ARCH

RUN apk update && \
    apk add \
        gcc \
        g++ \
        python2-dev \
        cmake \
        make \
        libc-dev \
        binutils \
        zlib-static \
        libstdc++ \
        git \
        xz

COPY --from=essetials-builder /deps/local/lib /deps/local/lib
COPY --from=essetials-builder /deps/local/include /deps/local/include
COPY --from=essetials-builder /deps/local/bin/llvm-config /deps/local/bin/llvm-config

# Adjust MAKE_JOBS variable is you want
RUN set -e \
	&& cd /deps \
	&& git clone https://github.com/zig-lang/zig \
	&& cd zig \
	&& git checkout "$ZIG_COMMIT" \
	&& mkdir -p /deps/zig/build \
	&& cd /deps/zig/build \
	&& cmake .. -DZIG_STATIC=on -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/deps/local -DCMAKE_INSTALL_PREFIX=/deps/install \
	&& make -j12 install \
	&& ./zig build docs


#####################################
## Build zphinx-zerver from source ##
#####################################

FROM alpine:3.13.3 as zphinx-builder

ARG ZPHINX_COMMIT

RUN apk update --no-cache \
	&& apk upgrade --no-cache \ 
	&& apk add git patch libsodium libsodium-dev libsodium-static gcc g++ automake autoconf pkgconfig python2-dev cmake ninja libc-dev binutils zlib-static libstdc++

COPY alpine.patch .

RUN git clone https://github.com/stef/zphinx-zerver.git \
	&& cd zphinx-zerver \
        && git checkout "$ZPHINX_COMMIT" \
	&& git submodule update --init --recursive \
	&& patch -p0 < ../alpine.patch 

COPY --from=zig-builder /deps/zig/build/zig ./zphinx-zerver/ 
COPY --from=zig-builder /deps/zig/lib ./zphinx-zerver/lib
COPY --from=zig-builder /deps/zig/zig-cache ./zphinx-zerver/zig-cache

RUN export PATH=$PATH:/zphinx-zerver/zig \
	&& cd zphinx-zerver \
	&& ./zig build install --prefix . -Drelease-safe=true

#################################
## Build application container ##
#################################

FROM alpine:3.13.3 as app

LABEL maintainer="mark@zsibok.hu"

ARG LLVM_VERSION
ARG LLD_VERSION
ARG CLANG_VERSION
ARG ARCH
ARG ZIG_COMMIT
ARG ZPHINX_COMMIT


LABEL org.label-schema.llvm-version=$LLVM_VERSION
LABEL org.label-schema.lld-version=$LLD_VERSION
LABEL org.label-schema.clang-version=$CLANG_VERSION
LABEL org.label-schema.arch=$ARCH
LABEL org.label-schema.zig-commit=$ZIG_COMMIT
LABEL org.label-schema.zphinx-commit=$ZPHINX_COMMIT

RUN apk update --no-cache \
	&& apk upgrade --no-cache \
	&& apk add libsodium-dev \
	&& mkdir -p /srv/data

COPY --from=zphinx-builder /zphinx-zerver/bin/ ./zphinx-zerver/
COPY --from=zphinx-builder /zphinx-zerver/lib/ ./zphinx-zerver/lib

EXPOSE 2355

VOLUME /zphinx-zerver /srv/data

CMD ["/zphinx-zerver/oracle"]
